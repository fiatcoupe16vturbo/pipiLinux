name: Build pipiLinux

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential libncurses-dev bison flex libssl-dev libelf-dev genisoimage grub-pc-bin mtools xorriso busybox

      - name: Clone Linux Kernel
        run: |
          git clone https://github.com/torvalds/linux.git
          cd linux
          make defconfig
          make -j$(nproc)

      - name: Create Root Filesystem
        run: |
          mkdir -p iso/{bin,etc,proc,sys,usr/{bin,lib,sbin,share},var}
          cp /bin/busybox iso/bin/
          cd iso/bin
          ln -s busybox sh
          ln -s busybox ls
          ln -s busybox init
          ln -s busybox mount
          ln -s busybox umount
          cd ../../
          echo -e '#!/bin/sh\n\nmount -t proc proc /proc\nmount -t sysfs sys /sys\nmount -t tmpfs tmpfs /tmp\necho "Welcome to pipiLinux"\nexec /bin/sh' > iso/init
          chmod +x iso/init

      - name: Create ISO Image with GRUB
        run: |
          mkdir -p iso/boot/grub
          cp linux/arch/x86/boot/bzImage iso/boot/vmlinuz
          echo 'set timeout=0' > iso/boot/grub/grub.cfg
          echo 'set default=0' >> iso/boot/grub/grub.cfg
          echo 'menuentry "pipiLinux" {' >> iso/boot/grub/grub.cfg
          echo '    linux /boot/vmlinuz root=/dev/sr0 rw' >> iso/boot/grub/grub.cfg
          echo '}' >> iso/boot/grub/grub.cfg
          grub-mkrescue -o pipiLinux.iso iso/

      - name: Upload ISO Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pipiLinux-ISO
          path: pipiLinux.iso
