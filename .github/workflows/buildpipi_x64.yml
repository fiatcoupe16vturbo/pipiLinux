name: Build pipiLinux x64

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential libncurses-dev bison flex libssl-dev libelf-dev genisoimage grub-pc-bin mtools xorriso busybox

      - name: Clone Linux Kernel
        run: |
          git clone https://github.com/torvalds/linux.git
          cd linux
          make x86_64_defconfig
          make -j$(nproc)

            - name: Create Initramfs
        run: |
          mkdir -p initramfs/{bin,sbin,etc,proc,sys,dev}
          cp /bin/busybox initramfs/bin/
          cd initramfs/bin
          ln -s busybox sh
          ln -s busybox mount
          ln -s busybox umount
          ln -s busybox init # Busybox'ın init işlevi kullanılsın
          cd ../..
          echo -e '#!/bin/sh\nmount -t proc proc /proc\nmount -t sysfs sys /sys\nmount -t devtmpfs dev /dev\nexec /bin/sh' > initramfs/init
          chmod +x initramfs/init
          (cd initramfs && find . | cpio -o -H newc | gzip) > initramfs.cpio.gz

            - name: Create ISO Image with GRUB and Initrd
        run: |
          mkdir -p iso/boot/grub
          cp linux/arch/x86/boot/bzImage iso/boot/vmlinuz
          cp initramfs.cpio.gz iso/boot/initrd.img
          echo 'set timeout=0' > iso/boot/grub/grub.cfg
          echo 'set default=0' >> iso/boot/grub/grub.cfg
          echo 'menuentry "pipiLinux" {' >> iso/boot/grub/grub.cfg
          echo '    linux /boot/vmlinuz root=/dev/ram0 rw init=/init' >> iso/boot/grub/grub.cfg
          echo '    initrd /boot/initrd.img' >> iso/boot/grub/grub.cfg
          echo '}' >> iso/boot/grub/grub.cfg
          grub-mkrescue -o pipiLinux.iso iso/

      - name: Upload ISO Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pipiLinux-ISO
          path: pipiLinux.iso
